name: Generar procedencia SLSA

on:
  push:
    branches: [ main, "fix/**" ]
    tags:
      - "v*"
  workflow_dispatch:

# Permisos mínimos, incluyendo write porque el reusable lo pide
permissions:
  contents: write
  id-token: write
  actions: read

concurrency:
  group: slsa-provenance-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build (demo) + calcular subjects
    runs-on: ubuntu-latest
    outputs:
      base64_subjects: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build artifact (demo)
        run: |
          mkdir -p dist
          echo "Build $(date -Iseconds)" > dist/build.txt

      # Opción A: shell (simple y funciona en ubuntu-latest)
      - name: Calcular base64-subjects (sha256 + nombre)
        id: hash
        run: |
          set -euo pipefail
          echo "hashes=$(sha256sum dist/build.txt | base64 -w0)" >> "$GITHUB_OUTPUT"

      # Opción B (alternativa): acción oficial para calcular subjects
      # - name: Create base64-subjects from file
      #   id: hash
      #   uses: slsa-framework/slsa-github-generator/actions/generator/generic/create-base64-subjects-from-file@v2.1.0
      #   with:
      #     path: dist/build.txt

      - name: Publicar artefacto de build
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/build.txt

  provenance:
    name: SLSA provenance (SLSA3)
    needs: build
    # Reforzamos permisos también a nivel job
    permissions:
      contents: write
      id-token: write
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: ${{ needs.build.outputs.base64_subjects }}
    secrets: inherit

  security_scan:
    name: Microsoft Security DevOps scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Microsoft Security DevOps
        id: msdo
        uses: microsoft/security-devops-action@v1.6.0
        with:
          categories: "code,secrets,iac,containers"
          policy: GitHub

      - name: Upload SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.msdo.outputs.sarifFile }}

  attest:
    name: Attestación (sólo en tags v*)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [ build, provenance ]
    permissions:
      attestations: write
      id-token: write
      contents: read
    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Descargar artefacto de build
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist

      - name: Crear attestation de build
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/build.txt

